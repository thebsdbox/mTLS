apiVersion: v1
kind: ServiceAccount
metadata:
  name: watcher
#  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: system:watcher-role
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
  - apiGroups: [""] # "" indicates the core API group
    resources: ["secrets"]
    verbs: ["create", "delete"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:watcher-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:watcher-role
subjects:
  - kind: ServiceAccount
    name: watcher
    namespace: default
---
apiVersion: v1
kind: Pod
metadata:
  name: kube-cert-watcher
spec:
  serviceAccountName: watcher
  containers:
    - name: kube-cert-watcher
      image: thebsdbox/watcher:v1
      imagePullPolicy: Always
      command: ["/kube-cert-watcher", "-watch"]
      volumeMounts:
        # name must match the volume name below
        - name: secret-volume
          mountPath: /certs
          readOnly: true
      # The secret data is exposed to Containers in the Pod through a Volume.
      env:
        - name: SMESH-CA-CERT
          valueFrom:
            secretKeyRef:
              name: watcher
              key: ca-cert
        - name: SMESH-CA-KEY
          valueFrom:
            secretKeyRef:
              name: watcher
              key: ca-key
  volumes:
    - name: secret-volume
      secret:
        secretName: watcher
